apply plugin: 'idea'
apply plugin: 'com.android.library'

android {
    def versionMajor = 1
    def versionMinor = 2
    def versionPatch = 0

    compileSdkVersion global_compileSdkVersion
    buildToolsVersion android_build_tools_version
    defaultConfig {
        minSdkVersion global_minSdkVersion
        targetSdkVersion global_compileSdkVersion
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    // Rename the aar correctly
    android.libraryVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.aar')) {
                def fileName = "microconnect-${variant.baseName}-${versionMajor}.${versionMinor}.${versionPatch}.aar"
                // output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
}

android.packagingOptions {
    exclude 'META-INF/services/com.fasterxml.jackson.databind.Module'
//    exclude 'META-INF/NOTICE' // will not include NOTICE file
//    exclude 'META-INF/LICENSE' // will not include LICENSE file
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

configurations {
    all*.exclude group: 'xpp3', module: 'xpp3'
}

dependencies {
    compile "com.android.support:support-v4:$android_support_lib_version"
    compile("com.android.support:appcompat-v7:$android_support_lib_version") {
        exclude module: 'support-v4'
    }
    compile "com.squareup.okhttp3:okhttp:3.2.0"
    compile "org.igniterealtime.smack:smack-android-extensions:$smack_lib_version"
    compile "org.igniterealtime.smack:smack-tcp:$smack_lib_version"
    compile "joda-time:joda-time:$jodatime_version"

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile "junit:junit:$junit_version"
}
