apply plugin: 'idea'
apply plugin: 'com.android.library'
apply plugin: 'com.kezong.fat-aar'

android {
    def versionMajor = 2
    def versionMinor = 0
    def versionPatch = 0

    compileSdkVersion global_compileSdkVersion
    buildToolsVersion android_build_tools_version
    defaultConfig {
        minSdkVersion global_minSdkVersion
        targetSdkVersion global_compileSdkVersion
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    // Rename the aar correctly
    android.libraryVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.aar')) {
                def fileName = "microconnect-${variant.baseName}-${versionMajor}.${versionMinor}.${versionPatch}.aar"
                // output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
}

android.packagingOptions {
    exclude 'META-INF/services/com.fasterxml.jackson.databind.Module'
//    exclude 'META-INF/NOTICE' // will not include NOTICE file
//    exclude 'META-INF/LICENSE' // will not include LICENSE file
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

configurations {
    all*.exclude group: 'xpp3', module: 'xpp3'
}

dependencies {
//    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation fileTree(dir: 'libs', include: ['*.aar'])

    implementation "com.android.support:support-v4:$android_support_lib_version"
    implementation("com.android.support:appcompat-v7:$android_support_lib_version") {
        exclude module: 'support-v4'
    }

//    api (name:'boomtownchat', ext:'aar') {
//        transitive = true
//    }

//    implementation project(':boomtown-boomtownchat-android') {
//        transitive=true
//    }
    embed project(path: ':boomtown-boomtownchat-android', configuration:'default')
    compileOnly project(path: ':boomtown-boomtownchat-android', configuration:'default')

    // flow layout
//    implementation "com.wefika:flowlayout:0.4.1"
    embed "com.wefika:flowlayout:0.4.1"
    compileOnly "com.wefika:flowlayout:0.4.1"

//    implementation "com.squareup.okhttp3:okhttp:3.2.0"
    embed "com.squareup.okhttp3:okhttp:3.2.0"
    compileOnly "com.squareup.okhttp3:okhttp:3.2.0"

//    api "org.igniterealtime.smack:smack-android-extensions:$smack_lib_version"
    embed "org.igniterealtime.smack:smack-android-extensions:$smack_lib_version"
    compileOnly "org.igniterealtime.smack:smack-android-extensions:$smack_lib_version"

//    api "org.igniterealtime.smack:smack-tcp:$smack_lib_version"
    embed "org.igniterealtime.smack:smack-tcp:$smack_lib_version"
    compileOnly "org.igniterealtime.smack:smack-tcp:$smack_lib_version"

//    implementation "joda-time:joda-time:$jodatime_version"
    embed "joda-time:joda-time:$jodatime_version"
    compileOnly "joda-time:joda-time:$jodatime_version"

//    compileOnly 'com.android.support:appcompat-v7:' + global_supportLibVersion;
//    compile "org.igniterealtime.smack:smack-android-extensions:$smack_lib_version"
//    compile "org.igniterealtime.smack:smack-tcp:$smack_lib_version"
//    api 'org.igniterealtime.smack:smack-android-extensions:4.3.1'
//    api 'org.igniterealtime.smack:smack-tcp:4.3.1'
    // animated GIFs
//    api 'pl.droidsonroids.gif:android-gif-drawable:1.2.8'
    embed 'pl.droidsonroids.gif:android-gif-drawable:1.2.8'
    compileOnly 'pl.droidsonroids.gif:android-gif-drawable:1.2.8'

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile "junit:junit:$junit_version"

//    compile ('com.foo:boomtownchat:1.0.0@aar'){
//        transitive=true
//    }
}
